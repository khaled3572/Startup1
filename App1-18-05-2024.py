# -*- coding: utf-8 -*-
"""
Created on Thu May 18 19:15:01 2024

@author: Sandjak
"""

import numpy as np
from math import *
#import pickle
import streamlit as st


# loading the saved model
#loaded_model = pickle.load(open('D:/Work/Machine Learning/Deploying Machine Learning model/trained_model.sav', 'rb'))


# creating a function for Prediction
  
def main():
    
    
    # giving a title
    st.title('Prédiction de la portance des sols fins traités par la chaux ')
    
    # getting the input data from the user
         #
    S = st.slider("Pourcentage de sable S(%): ",0,41,key = 11) 
    FC = st.slider("Pourcentage des fines (passant au tamis 0.080 mm) Fc(%): ",56,100,key = 21) 
    WL = st.slider("Limite de Liquidité Wl(%): ",30,84,key = 31)
    PI = st.slider("Indice de Plasticité IP(%): ",16,58,key = 41)
    WOPT = st.slider("Teneur en eau optimale de compactage W(%) : ",16,29,key = 51) 
    RODMAX = st.slider("Masse volumique séche maximale de compactage (g/cm3): ",1.32,1.85,key = 61)
    Dos = st.slider("Dosage de la chaux en (%) : ",0,11,key = 71)
    TS = st.slider("Temps de séchague en jours (J) : ",0,14,key = 81) 
    
    
    
    H1_1 = tanh((-30.1713699367741 + -0.0180469524480162 * TS + -3.38689131350029 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + -0.0333964720170485 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + -79.3635217795051 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + 15.5613489765537 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + 3.33127011395094 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + 1.3926389827929 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + 2.70124225967081 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_2 = tanh((-0.529940267422704 + -0.00631706873368844 * TS + -1.74849530468492 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + 0.181075871730371 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + -89.041881084322 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + 4.09583447535704 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + -27.8663470773977 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + -0.835491967028774 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + 0.91458142026889 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_3 = tanh((22.9034080879489 + -0.162714004482486 * TS + -3.9982369445299 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + -0.597701058859264 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + -91.2589539184021 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + 8.59653647974383 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + -29.28689499608 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + -2.30338496102813 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + -2.68981942380497 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_4 = tanh((-142.122718302941 + 0.26689382097152 * TS + 7.8687041395304 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + -1.97429412658355 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + -98.9122575979419 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + -1.93823584822404 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + -5.89440707666858 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + 1.29828479278859 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + 1.84172898555434 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_5 = tanh((-119.007754587069 + 0.243718500632437 * TS + 7.4688287738394 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + 0.65878968599206 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + -55.6394180800054 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + -2.23812528787597 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + 1.96796159336097 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + -0.296934648741212 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + -1.4444014467537 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_6 = tanh((-10.6805933221946 + -0.328402063258012 * TS + 7.02500358711477 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + 1.68556806051426 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + 82.5990973343111 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + 0.788070770130974 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + -13.037393378904 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + 0.0164165783781999 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + 1.67409887629778 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_7 = tanh((17.605904300993 + 0.0950555758284589 * TS + -6.49959824951375 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + 3.2717154655147 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + -81.3321762263869 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + -1.94646648352076 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + 9.09117020741381 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + -0.232671050170892 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + -1.03679748458861 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_8 = tanh((-58.7634188165676 + 0.216202074751603 * TS + 2.71945197270232 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + 0.304478208470766 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + -21.7025206165492 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + -2.20292741832893 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + 12.2841255728045 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + 0.479487289197551 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + -1.38834365246123 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_9 = tanh((-44.9674255413602 + -0.276997800300661 * TS + 5.62787736215809 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + 1.86275273902088 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + 60.3094976239717 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + -1.10583127261602 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + 14.5805890720955 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + -1.08976599344934 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + -0.127136153737927 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_10 = tanh((-0.976405704908086 + 0.364137367584208 * TS + -0.98679414858815 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + -0.137395555594905 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + -21.0597140576801 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + -0.486429168859191 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + -0.565774684544431 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + -0.501591681080101 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + -0.843143120119533 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_11 = tanh((-25.4073881608353 + 0.163350243857391 * TS + -0.571435569416777 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + 0.507495709765351 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + -53.6054263122162 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + 0.985217862672648 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + -1.27318126379666 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + 0.140144260677014 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + 0.11111023867293 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_12 = tanh((150.260728423575 + -0.442955598147897 * TS + -4.412082005603 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + 2.92604925606095 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + 132.171925208021 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + -1.32822492427165 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + -9.10929606804588 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + 0.281424867480195 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + 1.74865362213301 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_13 = tanh((112.058807627099 + -0.0709943619775477 * TS + -6.22418789393597 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + -0.748387900643789 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + 44.1192283881542 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + 3.50055292845322 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + -13.149643790198 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + -0.127682753923083 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + -2.33422733115223 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_14 = tanh((-38.5155063907117 + -0.219129870665663 * TS + 0.519593088790532 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + 1.09715458455688 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + 14.2037694839639 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + -3.92193531077164 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + 33.7025900265642 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + -1.53703555578556 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + -1.9152496791074 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_15 = tanh((-27.3746188811749 + 0.0408466744209523 * TS + 0.412589500906912 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + 1.28486199597557 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + -50.2365772557192 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + -1.15305753053784 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + -3.27503495438634 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + 0.711440871352581 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + 0.247946586136214 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_16 = tanh((175.374131191008 + -0.679587069976555 * TS + -23.7718658925944 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + 1.94409231462491 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + -128.374277740025 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + -0.182110507190912 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + 17.2558874716511 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + 3.44962166672433 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + 2.35840445693216 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_17 = tanh((-207.367635338863 + -0.457671365869383 * TS + 12.5241036351427 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + 3.61234072300192 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + -72.414482707384 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + -4.31954482177408 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + 23.5058418797749 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + 4.36974286720911 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + -1.60087174603994 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    H1_18 = tanh((78.0075595130283 + -0.220903313030762 * TS + -3.21403871872875 * asinh((-42697.6629547659 + 4320.94074952394 * WOPT)) + -1.47704977269334 * asinh((-8.46674304246133 + 0.0786842819896384 * FC)) + 45.7636770914789 * asinh((-0.666514240580824 + 0.00725356549067189 * Dos)) + -3.93101925255223 * asinh((0.708709169036001 + 0.0451146631765538 * S)) + -8.73417710579834 * asinh((0.995373194526535 + 0.0251104708754562 * PI)) + 1.038895979341 * log(((-28.6 + WL) / (88.05 + -1 * WL))) + -1.50580667414045 * log(((-1.24 + RODMAX) / (1.89 + -1 * RODMAX)))))

    output = 22.0888068888617 + 11.3261855108961 * H1_1 + -2.46769317649094 * H1_10 + -37.4662735272707 * H1_11 + 8.0305162684493 * H1_12 + 16.8333350823356 * H1_13 + 41.6905724756003 * H1_14 + 38.9982208818366 * H1_15 + -11.3689399212038 * H1_16 + -23.0683053741852 * H1_17 + 41.3808304681737 * H1_18 + 14.1868115743796 * H1_2 + 7.35402302877218 * H1_3 + 17.4383978988457 * H1_4 + 16.8976916862914 * H1_5 + 4.36940106800688 * H1_6 + -13.2156895115748 * H1_7 + 1.71492690436048 * H1_8 + -39.3713887595502 * H1_9

    output=round(output,2)
    
    if output < 0:
                   output = 0
    # code for Prediction
    
    predict = ''

    # creating a button for Prediction
    
    if st.button('Prédiction'):
     predict = ("Le CBR du sol traité à la chaux est:",output)
          
    st.success(predict)    
    
if __name__ == '__main__':
    main()            
#            
            
    
         
         
         
    
    

  
    
    
    
    
    
    
    
    
    
    
    
    
  
    
  
